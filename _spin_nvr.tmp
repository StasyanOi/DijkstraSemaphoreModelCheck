never task1 {    /* !(([] ((semaphoreThreshold==1))) && ([] ((semaphoreTokens<=1)))) */
T0_init:
	do
	:: atomic { (((! (((semaphoreThreshold==1)))) || (! (((semaphoreTokens<=1)))))) -> assert(!(((! (((semaphoreThreshold==1)))) || (! (((semaphoreTokens<=1))))))) }
	:: (1) -> goto T0_init
	od;
accept_all:
	skip
}
never task2 {    /* !(<> ((((((wasInCriticalSection[0]==1)) && ((wasInCriticalSection[1]==1))) && ((wasInCriticalSection[2]==1))) && ((wasInCriticalSection[3]==1))) && ((wasInCriticalSection[4]==1)))) */
accept_init:
T0_init:
	do
	:: (! (((((((wasInCriticalSection[0]==1)) && ((wasInCriticalSection[1]==1))) && ((wasInCriticalSection[2]==1))) && ((wasInCriticalSection[3]==1))) && ((wasInCriticalSection[4]==1))))) -> goto T0_init
	od;
}
never task3 {    /* !(([] ((semaphoreTokens!=-(1)))) && ([] ((semaphoreTokens<=3)))) */
T0_init:
	do
	:: atomic { (((! (((semaphoreTokens!=-(1))))) || (! (((semaphoreTokens<=3)))))) -> assert(!(((! (((semaphoreTokens!=-(1))))) || (! (((semaphoreTokens<=3))))))) }
	:: (1) -> goto T0_init
	od;
accept_all:
	skip
}
never task4 {    /* !((<> ((semaphoreTokens==-(1)))) && ([] ((semaphoreTokens<=3)))) */
T0_init:
	do
	:: (! (((semaphoreTokens==-(1))))) -> goto accept_S2
	:: atomic { (! (((semaphoreTokens<=3)))) -> assert(!(! (((semaphoreTokens<=3))))) }
	:: (1) -> goto T0_S5
	od;
accept_S2:
	do
	:: (! (((semaphoreTokens==-(1))))) -> goto accept_S2
	od;
T0_S5:
	do
	:: atomic { (! (((semaphoreTokens<=3)))) -> assert(!(! (((semaphoreTokens<=3))))) }
	:: (1) -> goto T0_S5
	od;
accept_all:
	skip
}
